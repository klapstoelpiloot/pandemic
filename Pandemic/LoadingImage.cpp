#include "LoadingImage.h"

// Loading image, 60 x 5 px
constexpr int loadingimage_width = 60;
constexpr int loadingimage_height = 5;
constexpr uint loadingimage[] = {
	0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x0000007F,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x0000007F, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x0000007F, 0x0000007F, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x0000007F,
	0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x0000007F, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x0000007F, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000,
	0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000,
	0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x0000007F, 0x00000000, 0x0000007F, 0x00000000,
	0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000,
	0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F, 0x00000000, 0x00000000,
	0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x0000007F, 0x0000007F, 0x00000000,
	0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x0000007F, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000,
	0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000,
	0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x0000007F, 0x00000000,
	0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x0000007F,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000,
	0x00000000, 0x0000007F, 0x0000007F, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x0000007F,
	0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x0000007F, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x0000007F, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x0000007F,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000007F
};

LoadingImage::LoadingImage()
{
}

int LoadingImage::Width() const
{
	return loadingimage_width;
}

int LoadingImage::Height() const
{
	return loadingimage_height;
}

const byte* LoadingImage::ByteData() const
{
	return reinterpret_cast<const byte*>(loadingimage);
}

const Color* LoadingImage::ColorData() const
{
	return reinterpret_cast<const Color*>(loadingimage);
}

MonoSampler LoadingImage::GetMonoSampler() const
{
	return MonoSampler(ByteData(), loadingimage_width);
}

ColorSampler LoadingImage::GetColorSampler() const
{
	return ColorSampler(ColorData(), loadingimage_width);
}

